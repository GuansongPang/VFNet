# readme of VFNet, wirtten by Dandan Zheng in 11/02/2020
# If you use any related code in your work, please cite the following publication:
# Dandan Zheng, Guansong Pang, et al., "Learning transferable deep convolutional neural networks for classification of bacterial virulence factors"



Abstract: Identification of virulence factors (VFs) is critical to the elucidation of bacterial pathogenesis and prevention of related infectious diseases. 
Current computational methods for VF prediction focus on binary classification or involve only several class(es) of VFs with sufficient samples. 
However, thousands of VF classes are presented in real-world scenarios and many of them only have a very limited number of samples available. 
In this work we first construct a large VF dataset, covering 3,446 VF classes with 160,495 sequences, and then propose deep convolutional neural network (CNN) models for VF classification. 
We show that (i) for common VF classes with sufficient samples, our models can achieve the state-of-the-art performance with a precision 0.9868, a recall 0.9783 and a F1-score 0.9803;
(ii) for uncommon VFs of divergent dataset, our models can learn transferable features from auxiliary data and achieve good performances with F1-score ranging from 0.9070 to 0.9373 
when combining with different predefined features, outperforming traditional classifiers by 1.21\%-15.03\% in F1-score.



Datasets (All datasets can be downloaded from "http://www.mgc.ac.cn/VFNet/"):
    original dataset     : Original VFs downloaded from VFDB(http://www.mgc.ac.cn/VFs/) and removed the identical sequences.
    VFG-2706 + VFG-740   : Expanded VFs by VFanalyzer from NCBI, filtered sequences longer than 2500 amino acids and removed classes with <=3 samples.
    VFG-2706-1066        : Removed highly homologous sequences (90% sequence identity) of VFG-2706, filtered classes with <=10 samples.
    VFG-566              : Removed highly homologous sequences (90% sequence identity) of original dataset, filtered classes with <=3 or >10 samples.
    VFG-2706-iid_train + VFG-2706-iid_indep  : VFG-2706-iid(a version of VFG-2706 based on genome information, to do independent testing)



Codes:
# python2.7 is recommended

(1) data preprocess of VFs
    data_preprocessing.py

(2) VFNet and its variant models

    # VFNet
        VFNet_main.py          : for VFG-2706/VFG-740/VFG2706-1066/COG-755
        VFNet_main_iid.py      : for VFG-2706-iid
        VFNet_main_VFG-566.py  : for VFG-566

    # other two deep learning models
        VFs_embed_main.py      : 'Embed + CNN + LSTM' model, for VFG-2706
        VFs_word2vec_main.py   : 'Word2vec + biGRU' model, for VFG-2706,

    # VFNet-H, merge VFNet with predefined features(aac/dpc/ctd/pseaac1/pseaac2/all)
        VFNet-H.py             : for VFG-2706/VFG-740/VFG2706-1066/COG-755
        VFNet-H_iid.py         : for VFG-2706-iid
        VFNet-H_VFG-566.py     : for VFG-566

    # VFNet(TL), transfer the pretrained VFNet model
        VFNet_TL.py            : from VFG-2706 to VFG-740
        VFNet_TL_VFG-566.py    : from COG-755 to VFG-566

    # VFNet-H(TL), transfer the pretrained VFNet-H models on predefined features
        VFNet-H_TL.py          : from VFG2706 to VFG740
        VFNet-H_TL_VFG-566.py  : from COG-755 to VFG-566

(3) baseline methods

    # extract predefined features and save as txt file
        baseline_features.py            : for VFG-2706/VFG-740/VFG-2706-1066/VFG-566/COG-755
        baseline_features_iid.py        : for VFG-2706-iid

    # convert txt to numpy for baseline methods
        baseline_feature_convert.py     : for VFG-2706/VFG-740/VFG-2706-1066/VFG-566/COG-755
        baseline_feature_convert_iid.py : special for VFG-2706-iid

    # baseline classifiers
        baseline_classify.py            : for VFG-2706/VFG-740/VFG-2706-1066/
        baseline_classify_iid.py        : special for VFG-2706-iid
        baseline_classify_VFG-566.py    : special for VFG-566

(4) other files
    word2vec_model_trembl_size_200_gensim : the pretrained word2vec model from [1], used for 'Word2vec + biGRU' model
    Readme                                : this file
    LICENSE
    DataGenerator_all.py
    encodes.py
    utils.py


# References
[1] Veltri, D., Kamath, U., and Shehu, A. (2018). Deep learning improves antimicrobial peptide recognition. Bioinformatics,34(16), 2740â€“2747.
